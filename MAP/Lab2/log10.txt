=============== ID = 6 ==============

ExecutionStack: [Int v, (Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:
Output: 
File Table:
Heap:

==============================

=============== ID = 6 ==============

ExecutionStack: [(Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 6 ==============

ExecutionStack: [Ref(Int) a, (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 6 ==============

ExecutionStack: [(v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 6 ==============

ExecutionStack: [v = 10, (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 6 ==============

ExecutionStack: [(New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 6 ==============

ExecutionStack: [New(a, 22), (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 6 ==============

ExecutionStack: [(fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 6 ==============

ExecutionStack: [fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))), (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 6 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 7 ==============

ExecutionStack: [(WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 6 ==============

ExecutionStack: [print(v), print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 7 ==============

ExecutionStack: [WriteHeap{a, 30}, (v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 6 ==============

ExecutionStack: [print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 7 ==============

ExecutionStack: [(v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 6 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 7 ==============

ExecutionStack: [v = 32, (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 4 ==============

ExecutionStack: [Int v, (Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:
Output: 
File Table:
Heap:

==============================

=============== ID = 4 ==============

ExecutionStack: [(Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 4 ==============

ExecutionStack: [Ref(Int) a, (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 4 ==============

ExecutionStack: [(v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 4 ==============

ExecutionStack: [v = 10, (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 4 ==============

ExecutionStack: [(New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 4 ==============

ExecutionStack: [New(a, 22), (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 4 ==============

ExecutionStack: [(fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 4 ==============

ExecutionStack: [fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))), (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 4 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 5 ==============

ExecutionStack: [(WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 4 ==============

ExecutionStack: [print(v), print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 5 ==============

ExecutionStack: [WriteHeap{a, 30}, (v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 4 ==============

ExecutionStack: [print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 5 ==============

ExecutionStack: [(v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 4 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 5 ==============

ExecutionStack: [v = 32, (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 4 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 5 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack: [Int v, (Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [Ref(Int) a, (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [v = 10, (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [New(a, 22), (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))), (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 2 ==============

ExecutionStack: [(WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [print(v), print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 2 ==============

ExecutionStack: [WriteHeap{a, 30}, (v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [(v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [v = 32, (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack: [Int v, (Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [Ref(Int) a, (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [v = 10, (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [New(a, 22), (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))), (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 2 ==============

ExecutionStack: [(WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [print(v), print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 2 ==============

ExecutionStack: [WriteHeap{a, 30}, (v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [(v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [v = 32, (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [print(v), print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack: [Int v, (Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(Ref(Int) a ; (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [Ref(Int) a, (v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(v = 10 ; (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [v = 10, (New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 0 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(New(a, 22) ; (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [New(a, 22), (fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:

==============================

=============== ID = 1 ==============

ExecutionStack: [(fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))) ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [fork((WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))), (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 2 ==============

ExecutionStack: [(WriteHeap{a, 30} ; (v = 32 ; (print(v) ; print(HeapRead(a)))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [print(v), print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 2 ==============

ExecutionStack: [WriteHeap{a, 30}, (v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 
File Table:
Heap:
0 -> 22

==============================

=============== ID = 1 ==============

ExecutionStack: [print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [(v = 32 ; (print(v) ; print(HeapRead(a))))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [v = 32, (print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [(print(v) ; print(HeapRead(a)))]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [print(v), print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack: [print(HeapRead(a))]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 1 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 10 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

=============== ID = 2 ==============

ExecutionStack:]
Symbol Table:a -> Reference(0, Int) v -> 32 
Output: 10
30
32
30

File Table:
Heap:
0 -> 30

==============================

